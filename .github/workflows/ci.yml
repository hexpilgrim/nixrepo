name: ci

on:
  push:
    branches: [main]
  pull_request:
  workflow_run:
    workflows: ["Update Cursor Version"]
    types:
      - completed

permissions: {}

env:
  flake: github:${{ github.repository }}/${{ github.sha }}
  nix-conf: |-
    accept-flake-config = true
    always-allow-substitutes = true
    builders-use-substitutes = true
    max-jobs = auto

jobs:
  evaluate:
    name: Evaluate flake.nix
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - uses: DeterminateSystems/nix-installer-action@v19
        with:
          extra-conf: ${{ env.nix-conf }}
      - name: Run flake checks
        run: |
          nix flake check '${{ env.flake }}' --impure --option allow-import-from-derivation true

  discover:
    name: Discover packages
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: Find packages
        id: set-matrix
        run: |
          pkgs=$(find pkgs -mindepth 2 -maxdepth 2 -name default.nix -exec dirname {} \; | sed 's|pkgs/||')
          json=$(echo "$pkgs" | jq -R -s -c 'split("\n") | map(select(length > 0)) | map({pkg: .})')
          echo "matrix={\"include\": $json}" >> $GITHUB_OUTPUT

  build:
    name: package ${{ matrix.pkg }} [x86_64-linux]
    runs-on: ubuntu-24.04
    needs: [evaluate, discover]
    strategy:
      matrix: ${{ fromJson(needs.discover.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - uses: DeterminateSystems/nix-installer-action@v19
        with:
          extra-conf: ${{ env.nix-conf }}
      - uses: cachix/cachix-action@v16
        with:
          name: hexpilgrim-package-check
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community
      - name: Build ${{ matrix.pkg }}
        run: |
          nix build '${{ env.flake }}#${{ matrix.pkg }}'

  check:
    name: All Cachix checks
    runs-on: ubuntu-24.04
    needs: [evaluate, build]
    if: always()
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
